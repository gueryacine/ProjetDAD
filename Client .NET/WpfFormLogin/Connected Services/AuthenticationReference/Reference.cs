//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfFormLogin.AuthenticationReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MSG", Namespace="http://schemas.datacontract.org/2004/07/Server_WCF_IIS")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    public partial struct MSG : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Op_infosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Op_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Op_statutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenAppField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] dataField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Op_infos {
            get {
                return this.Op_infosField;
            }
            set {
                if ((object.ReferenceEquals(this.Op_infosField, value) != true)) {
                    this.Op_infosField = value;
                    this.RaisePropertyChanged("Op_infos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Op_name {
            get {
                return this.Op_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Op_nameField, value) != true)) {
                    this.Op_nameField = value;
                    this.RaisePropertyChanged("Op_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Op_statut {
            get {
                return this.Op_statutField;
            }
            set {
                if ((this.Op_statutField.Equals(value) != true)) {
                    this.Op_statutField = value;
                    this.RaisePropertyChanged("Op_statut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TokenApp {
            get {
                return this.TokenAppField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenAppField, value) != true)) {
                    this.TokenAppField = value;
                    this.RaisePropertyChanged("TokenApp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TokenUser {
            get {
                return this.TokenUserField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenUserField, value) != true)) {
                    this.TokenUserField = value;
                    this.RaisePropertyChanged("TokenUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthenticationReference.IAuthenticationService")]
    public interface IAuthenticationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LoginByPassword", ReplyAction="http://tempuri.org/IAuthenticationService/LoginByPasswordResponse")]
        WpfFormLogin.AuthenticationReference.MSG LoginByPassword(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LoginByPassword", ReplyAction="http://tempuri.org/IAuthenticationService/LoginByPasswordResponse")]
        System.Threading.Tasks.Task<WpfFormLogin.AuthenticationReference.MSG> LoginByPasswordAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LoginByToken", ReplyAction="http://tempuri.org/IAuthenticationService/LoginByTokenResponse")]
        WpfFormLogin.AuthenticationReference.MSG LoginByToken(string tokenApp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LoginByToken", ReplyAction="http://tempuri.org/IAuthenticationService/LoginByTokenResponse")]
        System.Threading.Tasks.Task<WpfFormLogin.AuthenticationReference.MSG> LoginByTokenAsync(string tokenApp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Dispatching", ReplyAction="http://tempuri.org/IAuthenticationService/DispatchingResponse")]
        WpfFormLogin.AuthenticationReference.MSG Dispatching(WpfFormLogin.AuthenticationReference.MSG msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Dispatching", ReplyAction="http://tempuri.org/IAuthenticationService/DispatchingResponse")]
        System.Threading.Tasks.Task<WpfFormLogin.AuthenticationReference.MSG> DispatchingAsync(WpfFormLogin.AuthenticationReference.MSG msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LoadFiles", ReplyAction="http://tempuri.org/IAuthenticationService/LoadFilesResponse")]
        string LoadFiles(string[] files);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LoadFiles", ReplyAction="http://tempuri.org/IAuthenticationService/LoadFilesResponse")]
        System.Threading.Tasks.Task<string> LoadFilesAsync(string[] files);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationServiceChannel : WpfFormLogin.AuthenticationReference.IAuthenticationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationServiceClient : System.ServiceModel.ClientBase<WpfFormLogin.AuthenticationReference.IAuthenticationService>, WpfFormLogin.AuthenticationReference.IAuthenticationService {
        
        public AuthenticationServiceClient() {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WpfFormLogin.AuthenticationReference.MSG LoginByPassword(string username, string password) {
            return base.Channel.LoginByPassword(username, password);
        }
        
        public System.Threading.Tasks.Task<WpfFormLogin.AuthenticationReference.MSG> LoginByPasswordAsync(string username, string password) {
            return base.Channel.LoginByPasswordAsync(username, password);
        }
        
        public WpfFormLogin.AuthenticationReference.MSG LoginByToken(string tokenApp) {
            return base.Channel.LoginByToken(tokenApp);
        }
        
        public System.Threading.Tasks.Task<WpfFormLogin.AuthenticationReference.MSG> LoginByTokenAsync(string tokenApp) {
            return base.Channel.LoginByTokenAsync(tokenApp);
        }
        
        public WpfFormLogin.AuthenticationReference.MSG Dispatching(WpfFormLogin.AuthenticationReference.MSG msg) {
            return base.Channel.Dispatching(msg);
        }
        
        public System.Threading.Tasks.Task<WpfFormLogin.AuthenticationReference.MSG> DispatchingAsync(WpfFormLogin.AuthenticationReference.MSG msg) {
            return base.Channel.DispatchingAsync(msg);
        }
        
        public string LoadFiles(string[] files) {
            return base.Channel.LoadFiles(files);
        }
        
        public System.Threading.Tasks.Task<string> LoadFilesAsync(string[] files) {
            return base.Channel.LoadFilesAsync(files);
        }
    }
}
